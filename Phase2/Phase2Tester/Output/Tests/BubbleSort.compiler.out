const vmt_BBS
	:BBS.Start
	:BBS.Sort
	:BBS.Print
	:BBS.Init

func Main()
	t.0 = HeapAllocZ(12)
	[t.0] = :vmt_BBS
	if t.0 goto :null1
		Error("null pointer")
	null1:
	t.1 = [t.0]
	t.1 = [t.1+0]
	t.2 = call t.1(t.0 10)
	PrintIntS(t.2)
	ret

t.0 = 10BBSnumber
t.1 = 10BBSnumbersize
func BBS.Start(this sz)
	t.2 = aux01
	t.4 = [this]
	t.4 = [t.4+0]
	t.5 = call t.4(this sz)
	t.6 = [this]
	t.6 = [t.6+0]
	t.7 = call t.6(this)
	PrintIntS(t.7)
	t.8 = [this]
	t.8 = [t.8+0]
	t.9 = call t.8(this)
	t.10 = [this]
	t.10 = [t.10+0]
	t.11 = call t.10(this)
	ret 0
func BBS.Sort(this )
	t.0 = nt
	t.1 = nti
	t.2 = ntiaux02
	t.3 = ntiaux02aux04
	t.4 = ntiaux02aux04aux05
	t.5 = ntiaux02aux04aux05aux06
	t.6 = ntiaux02aux04aux05aux06aux07
	t.7 = ntiaux02aux04aux05aux06aux07j
	t.8 = ntiaux02aux04aux05aux06aux07jt
	i = Sub(size t.9)
	i = Sub(size1
	aux02 = Sub(0 t.9)
	aux02 = Sub(01
	t.9 = LtS(aux02 i)
	while1_top:
	t.9 = [this+8]
	if1 t.9 goto :while1_end
		j = 1
		t.9 = Add(i 1)
		t.10 = LtS(j t.9)
		while2_top:
		t.10 = [this+8]
		if2 t.10 goto :while2_end
			aux07 = Sub(j t.10)
			aux07 = Sub(j1
			aux04 = numberaux07
			aux05 = numberj
			t.10 = LtS(aux05 aux04)
			if2 t.10 goto :if3_else
				aux06 = Sub(j t.10)
				aux06 = Sub(j1
				t = numberaux06
				t = numberaux06numberaux06numberjnumberjt
				goto :if3_end
			if3_else:
				nt = 0
			if3_end:
			j = Add(j t.10)
			j = Add(j1
		while2_end:
		i = Sub(i t.10)
		i = Sub(i1
	while1_end:
	ret 0
func BBS.Print(this )
	t.0 = j
	j = 0
	t.1 = LtS(j size)
	while3_top:
	t.1 = [this+8]
	if4 t.1 goto :while3_end
		PrintIntS(t.1)
		j = Add(j t.1)
		j = Add(j1
	while3_end:
	ret 0
func BBS.Init(this sz)
	size = sz
	number = sz
	ret 0
